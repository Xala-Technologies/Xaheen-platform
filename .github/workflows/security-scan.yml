name: Security Scanning

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '**/package.json'
      - '**/bun.lockb'
      - '**/yarn.lock'
      - '**/package-lock.json'

env:
  NODE_VERSION: 18

jobs:
  dependency-scan:
    name: 🔍 Dependency Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run npm audit
        continue-on-error: true
        run: |
          echo "# Security Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          for package in packages/*/; do
            if [ -f "$package/package.json" ]; then
              package_name=$(basename "$package")
              echo "## 📦 $package_name" >> $GITHUB_STEP_SUMMARY
              cd "$package"
              
              # Run audit and capture output
              audit_output=$(npm audit --audit-level=moderate --json 2>/dev/null || echo '{"vulnerabilities":{}}')
              
              # Parse critical and high vulnerabilities
              critical=$(echo "$audit_output" | jq -r '.metadata.vulnerabilities.critical // 0' 2>/dev/null || echo "0")
              high=$(echo "$audit_output" | jq -r '.metadata.vulnerabilities.high // 0' 2>/dev/null || echo "0")
              moderate=$(echo "$audit_output" | jq -r '.metadata.vulnerabilities.moderate // 0' 2>/dev/null || echo "0")
              
              echo "- Critical: $critical" >> $GITHUB_STEP_SUMMARY
              echo "- High: $high" >> $GITHUB_STEP_SUMMARY
              echo "- Moderate: $moderate" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              
              # Fail if critical or high vulnerabilities found
              if [ "$critical" -gt 0 ] || [ "$high" -gt 0 ]; then
                echo "❌ Critical or high vulnerabilities found in $package_name"
                npm audit --audit-level=high
              fi
              
              cd - > /dev/null
            fi
          done

  code-scanning:
    name: 🔬 Code Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  secret-scanning:
    name: 🔐 Secret Detection
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified