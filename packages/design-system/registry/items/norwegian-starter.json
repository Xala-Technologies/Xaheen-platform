{
  "$schema": "https://xaheen.io/schemas/registry-item.schema.json",
  "name": "norwegian-starter",
  "type": "registry:item",
  "title": "Norwegian Enterprise Starter",
  "description": "Complete starter template for Norwegian enterprise applications with BankID and Altinn integration",
  "author": "Xaheen Technologies",
  "dependencies": [
    "axios",
    "zod",
    "@norwegian-id/bankid-js",
    "altinn-js-client"
  ],
  "registryDependencies": [
    "button",
    "input",
    "card",
    "xaheen-theme"
  ],
  "files": [
    {
      "path": "templates/norwegian-starter/.env.example",
      "type": "registry:file",
      "target": "~/.env.local",
      "content": "# BankID Configuration\nBANKID_CLIENT_ID=your-client-id\nBANKID_CLIENT_SECRET=your-client-secret\nBANKID_MERCHANT_NAME=Your Company Name\n\n# Altinn Configuration\nALTINN_API_KEY=your-api-key\nALTINN_ENVIRONMENT=test\n\n# NSM Security Level\nNSM_CLASSIFICATION=RESTRICTED"
    },
    {
      "path": "templates/norwegian-starter/lib/auth/bankid.ts",
      "type": "registry:file",
      "target": "~/lib/auth/bankid.ts",
      "content": "import { BankIDClient } from '@norwegian-id/bankid-js';\n\nexport const bankIdClient = new BankIDClient({\n  clientId: process.env.BANKID_CLIENT_ID!,\n  clientSecret: process.env.BANKID_CLIENT_SECRET!,\n  merchantName: process.env.BANKID_MERCHANT_NAME!,\n  environment: process.env.NODE_ENV === 'production' ? 'prod' : 'test'\n});\n\nexport async function authenticateWithBankID(nationalId: string): Promise<any> {\n  try {\n    const auth = await bankIdClient.authenticate({\n      personalNumber: nationalId,\n      endUserIp: '127.0.0.1'\n    });\n    return auth;\n  } catch (error) {\n    console.error('BankID authentication failed:', error);\n    throw error;\n  }\n}"
    },
    {
      "path": "templates/norwegian-starter/lib/integrations/altinn.ts",
      "type": "registry:file",
      "target": "~/lib/integrations/altinn.ts",
      "content": "import { AltinnClient } from 'altinn-js-client';\n\nexport const altinnClient = new AltinnClient({\n  apiKey: process.env.ALTINN_API_KEY!,\n  environment: process.env.ALTINN_ENVIRONMENT as 'test' | 'prod'\n});\n\nexport async function getOrganizationRights(orgNumber: string): Promise<any> {\n  try {\n    const rights = await altinnClient.authorization.getRights({\n      subject: orgNumber\n    });\n    return rights;\n  } catch (error) {\n    console.error('Altinn API error:', error);\n    throw error;\n  }\n}"
    },
    {
      "path": "templates/norwegian-starter/app/auth/page.tsx",
      "type": "registry:page",
      "target": "app/auth/page.tsx",
      "content": "'use client';\n\nimport { useState } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { authenticateWithBankID } from '@/lib/auth/bankid';\n\nexport default function AuthPage(): JSX.Element {\n  const [nationalId, setNationalId] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleBankIDLogin = async (): Promise<void> => {\n    setLoading(true);\n    try {\n      await authenticateWithBankID(nationalId);\n      // Handle successful authentication\n    } catch (error) {\n      console.error('Authentication failed:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-8\">\n      <Card nsmClassification=\"RESTRICTED\" className=\"max-w-md mx-auto\">\n        <CardHeader>\n          <CardTitle>Logg inn med BankID</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <Input\n            label=\"FÃ¸dselsnummer\"\n            norwegianOptimized\n            value={nationalId}\n            onChange={(e) => setNationalId(e.target.value)}\n            placeholder=\"11 siffer\"\n            maxLength={11}\n          />\n          <Button\n            onClick={handleBankIDLogin}\n            loading={loading}\n            loadingText=\"Logger inn...\"\n            nsmClassification=\"RESTRICTED\"\n            fullWidth\n          >\n            Logg inn med BankID\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"
    },
    {
      "path": "templates/norwegian-starter/middleware.ts",
      "type": "registry:file",
      "target": "~/middleware.ts",
      "content": "import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nexport function middleware(request: NextRequest) {\n  // Add NSM security headers\n  const response = NextResponse.next();\n  \n  response.headers.set('X-NSM-Classification', process.env.NSM_CLASSIFICATION || 'OPEN');\n  response.headers.set('X-Content-Type-Options', 'nosniff');\n  response.headers.set('X-Frame-Options', 'DENY');\n  response.headers.set('X-XSS-Protection', '1; mode=block');\n  \n  return response;\n}\n\nexport const config = {\n  matcher: '/:path*',\n};"
    }
  ],
  "docs": "This starter template includes:\n- BankID authentication setup\n- Altinn API integration\n- NSM security headers\n- Norwegian-optimized components\n- GDPR compliance helpers\n\nRemember to:\n1. Update .env.local with your credentials\n2. Configure your BankID merchant account\n3. Set up Altinn API access\n4. Review NSM classification levels",
  "meta": {
    "compliance": ["GDPR", "NSM", "WCAG AAA"],
    "integrations": ["BankID", "Altinn"],
    "language": "nb-NO"
  }
}