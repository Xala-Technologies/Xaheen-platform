{
  "name": "@xala-technologies/xaheen-cli",
  "version": "5.0.0",
  "description": "The next-generation CLI that combines service-based architecture with AI-powered component generation",
  "type": "module",
  "main": "./dist/index.js",
  "bin": {
    "xaheen": "dist/index.js",
    "xaheen-cli": "dist/index.js"
  },
  "scripts": {
    "dev": "tsup --watch",
    "build": "tsup",
    "test": "vitest --run",
    "test:watch": "vitest --watch",
    "test:coverage": "vitest --coverage",
    "test:ui": "vitest --ui",
    "test:unit": "vitest --run src/**/*.unit.test.ts",
    "test:integration": "vitest --run src/**/*.integration.test.ts",
    "test:e2e": "vitest --run src/**/*.e2e.test.ts",
    "test:performance": "vitest --run src/**/*.performance.test.ts",
    "test:security": "vitest --run src/**/*.security.test.ts",
    "test:all": "tsx scripts/run-all-tests.ts",
    "test:ci": "pnpm run test:unit && pnpm run test:integration && pnpm run test:e2e",
    "test:epic7": "tsx scripts/run-epic7-tests.ts",
    "test:epic7:dry": "tsx scripts/run-epic7-tests.ts --dry",
    "test:epic7:integration": "tsx scripts/run-epic7-tests.ts --categories=integration",
    "test:epic7:platform": "tsx scripts/run-epic7-tests.ts --categories=platform",
    "test:epic7:compliance": "tsx scripts/run-epic7-tests.ts --categories=compliance",
    "test:epic7:ai": "tsx scripts/run-epic7-tests.ts --categories=ai",
    "test:epic7:performance": "tsx scripts/run-epic7-tests.ts --categories=performance",
    "test:epic7:parallel": "tsx scripts/run-epic7-tests.ts --parallel",
    "test:epic7:report": "tsx scripts/run-epic7-tests.ts --generate-report",
    "test:parallel": "tsx scripts/test-parallel.ts",
    "test:parallel:aggressive": "tsx scripts/test-parallel.ts --strategy aggressive-parallel",
    "test:parallel:conservative": "tsx scripts/test-parallel.ts --strategy conservative-parallel",
    "test:parallel:adaptive": "tsx scripts/test-parallel.ts --strategy adaptive",
    "test:parallel:unit": "tsx scripts/test-parallel.ts --category unit-tests",
    "test:parallel:mcp": "tsx scripts/test-parallel.ts --category mcp-unit-tests",
    "test:parallel:frontend": "tsx scripts/test-parallel.ts --category frontend-unit-tests",
    "test:parallel:integration": "tsx scripts/test-parallel.ts --category integration-tests",
    "test:parallel:e2e": "tsx scripts/test-parallel.ts --category e2e-tests",
    "test:parallel:performance": "tsx scripts/test-parallel.ts --category performance-tests",
    "test:parallel:coverage": "tsx scripts/test-parallel.ts --coverage",
    "test:parallel:watch": "tsx scripts/test-parallel.ts --watch",
    "test:parallel:report": "tsx scripts/test-parallel.ts --coverage --reporter verbose",
    "test:dashboard": "tsx scripts/test-parallel.ts --coverage --reporter verbose && node -e \"console.log('Dashboard: file://' + process.cwd() + '/test-dashboard/index.html')\"",
    "test:e2e:compliance": "tsx scripts/run-e2e-compliance-tests.ts",
    "test:e2e:compliance:verbose": "tsx scripts/run-e2e-compliance-tests.ts --verbose",
    "test:e2e:compliance:react": "tsx scripts/run-e2e-compliance-tests.ts --frameworks react",
    "test:e2e:compliance:nextjs": "tsx scripts/run-e2e-compliance-tests.ts --frameworks nextjs",
    "test:e2e:compliance:vue": "tsx scripts/run-e2e-compliance-tests.ts --frameworks vue",
    "test:e2e:compliance:parallel": "tsx scripts/run-e2e-compliance-tests.ts --parallel",
    "test:e2e:compliance:report": "tsx scripts/run-e2e-compliance-tests.ts --report-only",    "test:phase4": "tsx tests/phase4/run-phase4-tests.ts",
    "test:phase4:unit": "tsx tests/phase4/run-phase4-tests.ts --suites unit",
    "test:phase4:integration": "tsx tests/phase4/run-phase4-tests.ts --suites integration",
    "test:phase4:e2e": "tsx tests/phase4/run-phase4-tests.ts --suites e2e",
    "test:phase4:performance": "tsx tests/phase4/run-phase4-tests.ts --suites performance",
    "test:phase4:express": "tsx tests/phase4/run-phase4-tests.ts --suites express",
    "test:phase4:nestjs": "tsx tests/phase4/run-phase4-tests.ts --suites nestjs",
    "test:phase4:fastify": "tsx tests/phase4/run-phase4-tests.ts --suites fastify",
    "test:phase4:hono": "tsx tests/phase4/run-phase4-tests.ts --suites hono",
    "test:phase4:skip-perf": "tsx tests/phase4/run-phase4-tests.ts --skip-performance",
    "test:phase4:report": "tsx tests/phase4/run-phase4-tests.ts --generate-report",
    "test:phase4:parallel": "tsx tests/phase4/run-phase4-tests.ts --parallel",
    "test:phase0": "tsx tests/phase0/scripts/run-phase0-tests.ts",
    "test:phase0:docs": "tsx tests/phase0/scripts/run-phase0-tests.ts --category docs",
    "test:phase0:distribution": "tsx tests/phase0/scripts/run-phase0-tests.ts --category distribution",
    "test:phase0:smoke": "tsx tests/phase0/scripts/run-phase0-tests.ts --category smoke",
    "test:phase0:ci": "tsx tests/phase0/scripts/run-phase0-tests.ts --ci",
    "test:phase0:verbose": "tsx tests/phase0/scripts/run-phase0-tests.ts --verbose",
    "test:phase0:coverage": "tsx tests/phase0/scripts/run-phase0-tests.ts --coverage",
    "test:phase1": "tsx tests/phase1/run-phase1-tests.ts",
    "test:phase1:unit": "vitest --run tests/phase1/unit/**/*.test.ts",
    "test:phase1:integration": "vitest --run tests/phase1/integration/**/*.test.ts",
    "test:phase1:e2e": "vitest --run tests/phase1/e2e/**/*.test.ts",
    "test:phase1:performance": "vitest --run tests/phase1/performance/**/*.test.ts",
    "test:phase1:coverage": "vitest --run tests/phase1/**/*.test.ts --coverage",
    "test:phase2": "tsx tests/phase2/run-phase2-tests.ts",
    "test:phase2:unit": "tsx tests/phase2/run-phase2-tests.ts --unit",
    "test:phase2:integration": "tsx tests/phase2/run-phase2-tests.ts --integration",
    "test:phase2:e2e": "tsx tests/phase2/run-phase2-tests.ts --e2e",
    "test:phase2:performance": "tsx tests/phase2/run-phase2-tests.ts --performance",
    "test:phase2:fast": "tsx tests/phase2/run-phase2-tests.ts --fast",
    "test:phase2:vue": "vitest --run tests/phase2/**/*vue*.test.ts",
    "test:phase2:svelte": "vitest --run tests/phase2/**/*svelte*.test.ts",
    "test:phase2:angular": "vitest --run tests/phase2/**/*angular*.test.ts",
    "test:phase2:solid": "vitest --run tests/phase2/**/*solid*.test.ts",
    "test:phase2:remix": "vitest --run tests/phase2/**/*remix*.test.ts",
    "test:phase2:matrix": "vitest --run tests/phase2/e2e/framework-matrix.test.ts",
    "test:phase9": "tsx tests/phase9/run-phase9-tests.ts",
    "test:phase9:static": "tsx tests/phase9/run-phase9-tests.ts --category=static-analysis",
    "test:phase9:security": "tsx tests/phase9/run-phase9-tests.ts --category=security-scanning",
    "test:phase9:mutation": "tsx tests/phase9/run-phase9-tests.ts --category=mutation-testing",
    "test:phase9:fuzz": "tsx tests/phase9/run-phase9-tests.ts --category=fuzz-testing",
    "test:phase9:sanitization": "tsx tests/phase9/run-phase9-tests.ts --category=input-sanitization",
    "test:phase9:ci": "tsx tests/phase9/run-phase9-tests.ts --ci",
    "test:phase9:verbose": "tsx tests/phase9/run-phase9-tests.ts --verbose",
    "test:phase9:fast": "tsx tests/phase9/run-phase9-tests.ts --skip-slow",
    "test:phase9:report": "tsx tests/phase9/run-phase9-tests.ts --ci --verbose",
    "test:phase7": "tsx tests/phase7/run-phase7-tests.ts",
    "test:phase7:scaffolding": "vitest --run tests/phase7/integration/multi-tenant-scaffolding.test.ts",
    "test:phase7:provisioning": "vitest --run tests/phase7/integration/tenant-provisioning.test.ts",
    "test:phase7:rbac": "vitest --run tests/phase7/integration/rbac-admin.test.ts",
    "test:phase7:licensing": "vitest --run tests/phase7/integration/license-gating.test.ts",
    "test:phase7:verbose": "tsx tests/phase7/run-phase7-tests.ts --verbose",
    "test:phase7:report": "tsx tests/phase7/run-phase7-tests.ts --generate-report",
    "test:phase8": "tsx tests/phase8/run-phase8-tests.ts",
    "test:phase8:install": "vitest --run tests/phase8/integration/plugin-install.test.ts",
    "test:phase8:publish": "vitest --run tests/phase8/integration/plugin-publish.test.ts",
    "test:phase8:registry": "vitest --run tests/phase8/integration/plugin-registry.test.ts",
    "test:phase8:compatibility": "vitest --run tests/phase8/integration/version-compatibility.test.ts",
    "test:phase8:verbose": "tsx tests/phase8/run-phase8-tests.ts --verbose",
    "test:phase8:report": "tsx tests/phase8/run-phase8-tests.ts --generate-report",
    "test:phases-7-8": "tsx tests/run-phases-7-8.ts",
    "test:phases-7-8:report": "tsx tests/run-phases-7-8.ts --generate-report",
    "test:pnpm": "pnpm exec tsx tests/run-all-tests-pnpm.ts",
    "test:pnpm:quick": "pnpm exec tsx tests/run-available-tests.ts",
    "test:pnpm:report": "pnpm exec tsx tests/run-all-tests-pnpm.ts && open tests/results/pnpm-test-report.html",
    "type-check": "tsc --noEmit",
    "lint": "biome check .",
    "format": "biome format --write .",
    "clean": "rm -rf dist .turbo node_modules test-output",
    "prepack": "pnpm run build"
  },
  "dependencies": {
    "@clack/prompts": "^0.9.0",
    "chalk": "^5.5.0",
    "chokidar": "^3.5.3",
    "commander": "^12.1.0",
    "consola": "^3.2.3",
    "execa": "^9.6.0",
    "fs-extra": "^11.3.1",
    "glob": "^11.0.3",
    "handlebars": "^4.7.8",
    "inquirer": "^9.2.12",
    "ora": "^8.1.1",
    "semver": "^7.6.3",
    "ts-morph": "^24.0.0",
    "yaml": "^2.6.1",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@types/fs-extra": "^11.0.4",
    "@types/node": "^22.10.2",
    "@types/semver": "^7.5.8",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "eslint": "^8.57.1",
    "tsup": "^8.3.5",
    "tsx": "^4.19.1",
    "typescript": "^5.7.2",
    "vitest": "^2.1.8"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "keywords": [
    "cli",
    "scaffold",
    "xaheen",
    "xala",
    "enterprise",
    "saas",
    "ai",
    "typescript",
    "generator"
  ],
  "author": "Xala Technologies",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Xala-Technologies/xaheen.git"
  },
  "bugs": {
    "url": "https://github.com/Xala-Technologies/xaheen/issues"
  },
  "homepage": "https://xaheen.dev",
  "publishConfig": {
    "access": "public",
    "registry": "https://npm.pkg.github.com"
  },
  "files": [
    "dist",
    "README.md",
    "CHANGELOG.md",
    "templates"
  ],
  "directories": {
    "doc": "docs",
    "example": "examples",
    "test": "tests"
  },
  "types": "./dist/index.d.ts"
}
