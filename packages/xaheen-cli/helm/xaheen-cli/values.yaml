# Xaheen CLI - Helm Chart Values
# Norwegian Enterprise Grade with Multi-Environment Support

# =============================================================================
# Global Configuration
# =============================================================================
global:
  # Norwegian compliance settings
  norwegianCompliance:
    enabled: true
    nsmClassification: "RESTRICTED"  # OPEN, RESTRICTED, CONFIDENTIAL, SECRET
    gdprCompliant: true
    dataLocalization: "norway"
    norwegianLocale: "nb-NO"
    timezone: "Europe/Oslo"
    
  # Environment configuration
  environment: "production"  # production, staging, development
  
  # Security settings
  security:
    enabled: true
    framework: "nsm"
    podSecurityStandard: "restricted"  # baseline, restricted
    networkPolicies: true
    securityContextConstraints: true
    
  # Service mesh (Istio Ambient Mode)
  serviceMesh:
    enabled: true
    mode: "ambient"  # ambient, sidecar, disabled
    waypoint: true
    mtls: "STRICT"
    
  # Monitoring and observability
  monitoring:
    enabled: true
    prometheus: true
    grafana: true
    jaeger: true
    opentelemetry: true
    
  # Image registry
  imageRegistry: "registry.gitlab.com"
  imagePullSecrets:
    - name: "gitlab-registry-secret"

# =============================================================================
# Application Configuration
# =============================================================================
# Application image
image:
  registry: "registry.gitlab.com"
  repository: "xaheen/xaheen-cli"
  tag: "latest"
  pullPolicy: "IfNotPresent"
  
# Application configuration
app:
  name: "xaheen-cli"
  version: "1.0.0"
  
  # Runtime configuration
  config:
    nodeEnv: "production"
    logLevel: "info"
    logFormat: "json"
    port: 3000
    host: "0.0.0.0"
    
    # Norwegian compliance
    nsmClassification: "RESTRICTED"
    gdprCompliance: true
    norwegianLocale: "nb-NO"
    dataLocalization: "norway"
    timezone: "Europe/Oslo"
    
    # Security
    helmet:
      enabled: true
    cors:
      enabled: true
    rateLimit:
      enabled: true
    session:
      secure: true
      
    # Monitoring
    monitoring:
      enabled: true
    telemetry:
      enabled: true
    prometheus:
      enabled: true
      port: 9090
      path: "/metrics"
      
    # Feature flags
    featureFlags:
      service: "launchdarkly"
      enabled: true
      
    # Caching
    redis:
      enabled: true
      
    # Health checks
    healthcheck:
      enabled: true
      interval: 30000
      timeout: 5000

# =============================================================================
# Deployment Configuration
# =============================================================================
deployment:
  # Replica configuration
  replicaCount: 3
  
  # Update strategy
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
      
  # Pod template
  podTemplate:
    # Security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 1001
      runAsGroup: 1001
      fsGroup: 1001
      seccompProfile:
        type: "RuntimeDefault"
        
    # Container security context
    containerSecurityContext:
      runAsNonRoot: true
      runAsUser: 1001
      runAsGroup: 1001
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - "ALL"
        add:
          - "NET_BIND_SERVICE"
          
    # Resource requirements
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
        ephemeral-storage: "1Gi"
      limits:
        memory: "1Gi"
        cpu: "500m"
        ephemeral-storage: "2Gi"
        
    # Probes
    livenessProbe:
      httpGet:
        path: "/health"
        port: 3000
      initialDelaySeconds: 30
      periodSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 3
      
    readinessProbe:
      httpGet:
        path: "/ready"
        port: 3000
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 3
      
    startupProbe:
      httpGet:
        path: "/startup"
        port: 3000
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 12
      
  # Node selection and affinity
  nodeSelector:
    kubernetes.io/arch: "amd64"
    topology.kubernetes.io/zone: "norway-east-1a"
    data.localization: "norway"
    
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: "In"
                  values: ["xaheen-cli"]
            topologyKey: "kubernetes.io/hostname"
            
  tolerations:
    - key: "nsm.no/classification"
      operator: "Equal"
      value: "RESTRICTED"
      effect: "NoSchedule"
      
  # Pod disruption budget
  podDisruptionBudget:
    enabled: true
    minAvailable: 2

# =============================================================================
# Service Configuration
# =============================================================================
service:
  type: "ClusterIP"
  ports:
    - name: "http"
      port: 80
      targetPort: 3000
      protocol: "TCP"
    - name: "metrics"
      port: 9090
      targetPort: 9090
      protocol: "TCP"
  sessionAffinity: "None"

# =============================================================================
# Ingress Configuration
# =============================================================================
ingress:
  enabled: true
  className: "istio"
  
  # Norwegian compliance annotations
  annotations:
    nsm.no/classification: "RESTRICTED"
    gdpr.eu/article32: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
  hosts:
    - host: "xaheen-cli.xala.no"
      paths:
        - path: "/"
          pathType: "Prefix"
          
  tls:
    - secretName: "xaheen-cli-tls"
      hosts:
        - "xaheen-cli.xala.no"

# =============================================================================
# Autoscaling Configuration
# =============================================================================
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  
  metrics:
    - type: "Resource"
      resource:
        name: "cpu"
        target:
          type: "Utilization"
          averageUtilization: 70
    - type: "Resource"
      resource:
        name: "memory"
        target:
          type: "Utilization"
          averageUtilization: 80
          
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: "Percent"
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: "Percent"
          value: 50
          periodSeconds: 60
        - type: "Pods"
          value: 2
          periodSeconds: 60
      selectPolicy: "Max"

# =============================================================================
# Redis Configuration (for caching)
# =============================================================================
redis:
  enabled: true
  
  # Use Bitnami Redis chart
  auth:
    enabled: true
    password: ""  # Will be generated
    
  master:
    persistence:
      enabled: true
      size: "8Gi"
      storageClass: "ssd"
      
  replica:
    replicaCount: 2
    persistence:
      enabled: true
      size: "8Gi"
      storageClass: "ssd"
      
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      
  # Norwegian compliance
  commonLabels:
    nsm.classification: "RESTRICTED"
    gdpr.compliant: "true"
    data.localization: "norway"

# =============================================================================
# PostgreSQL Configuration (for persistent storage)
# =============================================================================
postgresql:
  enabled: false  # Enable if persistent storage is needed
  
  auth:
    postgresPassword: ""  # Will be generated
    database: "xaheen_cli"
    
  primary:
    persistence:
      enabled: true
      size: "20Gi"
      storageClass: "ssd"
      
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      
  # Norwegian compliance
  commonLabels:
    nsm.classification: "RESTRICTED"
    gdpr.compliant: "true"
    data.localization: "norway"

# =============================================================================
# Monitoring Configuration
# =============================================================================
monitoring:
  # Prometheus
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: "30s"
      scrapeTimeout: "10s"
      
  # Grafana dashboards
  grafana:
    enabled: true
    dashboards:
      enabled: true
      
  # Jaeger tracing
  jaeger:
    enabled: true
    
  # OpenTelemetry
  opentelemetry:
    enabled: true
    collector:
      enabled: true

# =============================================================================
# Security Configuration
# =============================================================================
security:
  # Network policies
  networkPolicies:
    enabled: true
    
  # Pod security policies
  podSecurityPolicy:
    enabled: true
    
  # Service account
  serviceAccount:
    create: true
    name: ""
    annotations:
      nsm.no/classification: "RESTRICTED"
      vault.hashicorp.com/role: "xaheen-cli"
      
  # RBAC
  rbac:
    create: true
    
  # Security context constraints (OpenShift)
  securityContextConstraints:
    enabled: false

# =============================================================================
# HashiCorp Vault Configuration
# =============================================================================
vault:
  enabled: true
  
  # Vault agent injection
  agent:
    enabled: true
    
  # Secret injection
  secrets:
    - name: "database-credentials"
      path: "secret/xaheen-cli/database"
    - name: "redis-credentials"
      path: "secret/xaheen-cli/redis"
    - name: "api-keys"
      path: "secret/xaheen-cli/api-keys"
      
  # Authentication
  auth:
    kubernetes:
      enabled: true
      role: "xaheen-cli"

# =============================================================================
# Istio Service Mesh Configuration
# =============================================================================
istio:
  enabled: true
  
  # Ambient mode configuration
  ambient:
    enabled: true
    waypoint:
      enabled: true
      name: "xaheen-waypoint"
      
  # Security policies
  security:
    authorizationPolicy:
      enabled: true
    peerAuthentication:
      enabled: true
      mtls: "STRICT"
      
  # Traffic management
  traffic:
    virtualService:
      enabled: true
    destinationRule:
      enabled: true
      
  # Telemetry
  telemetry:
    enabled: true
    metrics:
      enabled: true
    accessLogging:
      enabled: true
    tracing:
      enabled: true

# =============================================================================
# Canary Deployment Configuration
# =============================================================================
canary:
  enabled: false
  
  # Canary settings
  weight: 10
  maxWeight: 50
  stepWeight: 10
  interval: "1m"
  
  # Analysis
  analysis:
    successRate: 99
    latency: 500
    
  # Rollback
  rollback:
    enabled: true
    threshold: 5

# =============================================================================
# Blue-Green Deployment Configuration
# =============================================================================
blueGreen:
  enabled: true
  
  # Deployment colors
  activeColor: "blue"
  
  # Switch strategy
  switchStrategy: "manual"  # manual, automatic
  
  # Rollback configuration
  rollback:
    enabled: true
    autoRollback: false

# =============================================================================
# Environment-Specific Overrides
# =============================================================================
# These can be overridden in separate values files

# Production environment (values-production.yaml)
production:
  replicaCount: 5
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  nsmClassification: "RESTRICTED"
  
# Staging environment (values-staging.yaml)
staging:
  replicaCount: 2
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  nsmClassification: "OPEN"
  
# Development environment (values-development.yaml)
development:
  replicaCount: 1
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "512Mi"
      cpu: "250m"
  nsmClassification: "OPEN"
  
  # Development-specific features
  debug:
    enabled: true
  hotReload:
    enabled: true