-- {{className}} - Create {{table}} table
-- Generated at: {{generatedAt}}
-- Migration: {{timestamp}}_{{fileName}}

{{#if norwegian}}
-- Norwegian data compliance: This migration includes GDPR and UU compliance features
{{/if}}

{{#if dataCompliance}}
-- GDPR Compliance: This table includes data protection features
{{/if}}

-- Create {{table}} table
CREATE TABLE "{{table}}" (
  "id" SERIAL PRIMARY KEY,
  {{#each fields}}
  "{{name}}" {{#eq type 'string'}}VARCHAR(255){{/eq}}{{#eq type 'text'}}TEXT{{/eq}}{{#eq type 'integer'}}INTEGER{{/eq}}{{#eq type 'bigint'}}BIGINT{{/eq}}{{#eq type 'decimal'}}DECIMAL(10,2){{/eq}}{{#eq type 'float'}}REAL{{/eq}}{{#eq type 'boolean'}}BOOLEAN{{/eq}}{{#eq type 'date'}}DATE{{/eq}}{{#eq type 'datetime'}}TIMESTAMP{{/eq}}{{#eq type 'timestamp'}}TIMESTAMP{{/eq}}{{#eq type 'json'}}JSONB{{/eq}}{{#eq type 'uuid'}}UUID{{/eq}}{{#eq type 'email'}}VARCHAR(255){{/eq}}{{#eq type 'url'}}VARCHAR(500){{/eq}}{{#if nullable}} NULL{{else}} NOT NULL{{/if}}{{#if unique}} UNIQUE{{/if}}{{#if defaultValue}} DEFAULT {{defaultValue}}{{/if}},
  {{/each}}
  {{#if dataCompliance}}
  -- GDPR compliance fields
  "data_consent_given" BOOLEAN DEFAULT false,
  "data_consent_date" TIMESTAMP NULL,
  "data_retention_until" TIMESTAMP NULL,
  "anonymization_date" TIMESTAMP NULL,
  "is_anonymized" BOOLEAN DEFAULT false,
  {{/if}}
  {{#if norwegian}}
  -- Norwegian compliance fields
  "uu_accessible" BOOLEAN DEFAULT true,
  "language_preference" VARCHAR(10) DEFAULT 'nb-NO',
  {{/if}}
  "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

{{#each fields}}
{{#if index}}
-- Create index for {{name}}
CREATE INDEX "idx_{{../table}}_{{name}}" ON "{{../table}}" ("{{name}}");
{{/if}}
{{#if unique}}
-- Create unique constraint for {{name}}
ALTER TABLE "{{../table}}" ADD CONSTRAINT "unique_{{../table}}_{{name}}" UNIQUE ("{{name}}");
{{/if}}
{{/each}}

-- Create updated_at trigger
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = CURRENT_TIMESTAMP;
  RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_{{table}}_updated_at 
  BEFORE UPDATE ON "{{table}}"
  FOR EACH ROW 
  EXECUTE FUNCTION update_updated_at_column();

{{#if dataCompliance}}
-- GDPR compliance: Create function to check data retention
CREATE OR REPLACE FUNCTION check_data_retention_{{table}}()
RETURNS TRIGGER AS $$
BEGIN
  -- Check if data retention period has expired
  IF NEW.data_retention_until IS NOT NULL AND NEW.data_retention_until < CURRENT_TIMESTAMP THEN
    -- Mark for anonymization
    NEW.is_anonymized = true;
    NEW.anonymization_date = CURRENT_TIMESTAMP;
  END IF;
  RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER check_retention_{{table}}
  BEFORE UPDATE ON "{{table}}"
  FOR EACH ROW 
  EXECUTE FUNCTION check_data_retention_{{table}}();

-- Create view for active (non-anonymized) records
CREATE VIEW "{{table}}_active" AS
SELECT * FROM "{{table}}" 
WHERE is_anonymized = false;
{{/if}}

{{#if norwegian}}
-- Norwegian compliance: Create function for UU accessibility tracking
CREATE OR REPLACE FUNCTION log_accessibility_{{table}}()
RETURNS TRIGGER AS $$
BEGIN
  -- Log accessibility compliance changes
  IF OLD.uu_accessible IS DISTINCT FROM NEW.uu_accessible THEN
    INSERT INTO accessibility_audit_log (
      table_name, 
      record_id, 
      old_value, 
      new_value, 
      changed_at
    ) VALUES (
      '{{table}}', 
      NEW.id, 
      OLD.uu_accessible, 
      NEW.uu_accessible, 
      CURRENT_TIMESTAMP
    ) ON CONFLICT DO NOTHING;
  END IF;
  RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER log_accessibility_changes_{{table}}
  AFTER UPDATE ON "{{table}}"
  FOR EACH ROW 
  EXECUTE FUNCTION log_accessibility_{{table}}();

-- Create accessibility audit log table if it doesn't exist
CREATE TABLE IF NOT EXISTS "accessibility_audit_log" (
  "id" SERIAL PRIMARY KEY,
  "table_name" VARCHAR(255) NOT NULL,
  "record_id" INTEGER NOT NULL,
  "old_value" BOOLEAN,
  "new_value" BOOLEAN,
  "changed_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
{{/if}}

-- Add comments for documentation
COMMENT ON TABLE "{{table}}" IS 'Generated by Xaheen CLI - {{className}} table{{#if norwegian}} with Norwegian UU compliance{{/if}}{{#if dataCompliance}} and GDPR compliance{{/if}}';
{{#each fields}}
COMMENT ON COLUMN "{{../table}}"."{{name}}" IS '{{type}} field{{#if nullable}} (nullable){{/if}}{{#if unique}} (unique){{/if}}';
{{/each}}

{{#if dataCompliance}}
COMMENT ON COLUMN "{{table}}"."data_consent_given" IS 'GDPR: User consent for data processing';
COMMENT ON COLUMN "{{table}}"."data_retention_until" IS 'GDPR: Date when data should be deleted or anonymized';
COMMENT ON COLUMN "{{table}}"."is_anonymized" IS 'GDPR: Whether the record has been anonymized';
{{/if}}

{{#if norwegian}}
COMMENT ON COLUMN "{{table}}"."uu_accessible" IS 'Norwegian UU: Whether record follows accessibility guidelines';
COMMENT ON COLUMN "{{table}}"."language_preference" IS 'Norwegian UU: User language preference';
{{/if}}