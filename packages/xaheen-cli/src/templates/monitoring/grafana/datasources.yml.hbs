# Grafana Datasources Configuration for {{projectName}}
# Generated by Xaheen CLI - Story 4.3 Monitoring and Observability

apiVersion: 1

datasources:
  {{#if features.includes('prometheus')}}
  # Prometheus - Metrics
  - name: Prometheus
    type: prometheus
    access: proxy
    url: {{#if kubernetes}}http://prometheus.{{kubernetes.namespace}}.svc.cluster.local:9090{{else}}http://prometheus:9090{{/if}}
    isDefault: true
    editable: true
    jsonData:
      timeInterval: "30s"
      queryTimeout: "60s"
      httpMethod: POST
      {{#if features.includes('distributed-tracing')}}
      # Enable exemplar support for trace correlation
      exemplarTraceIdDestinations:
        - name: traceID
          datasourceUid: {{#if features.includes('jaeger')}}jaeger{{else if features.includes('tempo')}}tempo{{else}}jaeger{{/if}}
          url: {{#if features.includes('jaeger')}}http://jaeger:16686/trace/$${__value.raw}{{else if features.includes('tempo')}}http://tempo:3200/trace/$${__value.raw}{{else}}http://jaeger:16686/trace/$${__value.raw}{{/if}}
      {{/if}}
    version: 1
  {{/if}}

  {{#if features.includes('loki')}}
  # Loki - Logs
  - name: Loki
    type: loki
    access: proxy
    url: {{#if kubernetes}}http://loki.{{kubernetes.namespace}}.svc.cluster.local:3100{{else}}http://loki:3100{{/if}}
    editable: true
    jsonData:
      maxLines: 1000
      timeout: 60s
      {{#if features.includes('distributed-tracing')}}
      # Enable derived fields for trace correlation
      derivedFields:
        - name: TraceID
          label: traceID
          url: {{#if features.includes('jaeger')}}http://jaeger:16686/trace/$${__value.raw}{{else if features.includes('tempo')}}http://tempo:3200/trace/$${__value.raw}{{else}}http://jaeger:16686/trace/$${__value.raw}{{/if}}
          regex: '"trace_id":\s*"([^"]*)"'
          datasourceUid: {{#if features.includes('jaeger')}}jaeger{{else if features.includes('tempo')}}tempo{{else}}jaeger{{/if}}
        - name: SpanID  
          label: spanID
          regex: '"span_id":\s*"([^"]*)"'
      {{/if}}
    version: 1
  {{/if}}

  {{#if features.includes('jaeger')}}
  # Jaeger - Distributed Tracing
  - name: Jaeger
    type: jaeger
    uid: jaeger
    access: proxy
    url: {{#if kubernetes}}http://jaeger.{{kubernetes.namespace}}.svc.cluster.local:16686{{else}}http://jaeger:16686{{/if}}
    editable: true
    jsonData:
      tracesToLogs:
        datasourceUid: loki
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [
          { key: 'service.name', value: 'service' },
          { key: 'service.namespace', value: 'namespace' }
        ]
        mapTagNamesEnabled: true
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        filterByTraceID: true
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: prometheus
        tags: [
          { key: 'service.name', value: 'service' },
          { key: 'service.namespace', value: 'namespace' }
        ]
        queries:
          - name: 'Sample query'
            query: 'histogram_quantile($${__rate_interval}, sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[$$__rate_interval])) by (le))'
      nodeGraph:
        enabled: true
    version: 1
  {{/if}}

  {{#if features.includes('tempo')}}
  # Tempo - Distributed Tracing (Alternative to Jaeger)
  - name: Tempo
    type: tempo
    uid: tempo
    access: proxy
    url: {{#if kubernetes}}http://tempo.{{kubernetes.namespace}}.svc.cluster.local:3200{{else}}http://tempo:3200{{/if}}
    editable: true
    jsonData:
      tracesToLogs:
        datasourceUid: loki
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [
          { key: 'service.name', value: 'service' },
          { key: 'service.namespace', value: 'namespace' }
        ]
        mapTagNamesEnabled: true
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        filterByTraceID: true
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: prometheus
        tags: [
          { key: 'service.name', value: 'service' },
          { key: 'service.namespace', value: 'namespace' }
        ]
        queries:
          - name: 'Request Rate'
            query: 'sum(rate(traces_spanmetrics_calls_total{$$__tags}[$$__rate_interval]))'
          - name: 'Error Rate'  
            query: 'sum(rate(traces_spanmetrics_calls_total{status="error",$$__tags}[$$__rate_interval])) / sum(rate(traces_spanmetrics_calls_total{$$__tags}[$$__rate_interval]))'
          - name: 'Duration'
            query: 'histogram_quantile(0.95, sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[$$__rate_interval])) by (le))'
      search:
        hide: false
      nodeGraph:
        enabled: true
      serviceMap:
        datasourceUid: prometheus
    version: 1
  {{/if}}

  {{#if features.includes('alertmanager')}}
  # Alertmanager - Alert Management
  - name: Alertmanager
    type: alertmanager
    access: proxy
    url: {{#if kubernetes}}http://alertmanager.{{kubernetes.namespace}}.svc.cluster.local:9093{{else}}http://alertmanager:9093{{/if}}
    editable: true
    jsonData:
      implementation: prometheus
      handleGrafanaManagedAlerts: false
    version: 1
  {{/if}}

  # TestData - For demo and testing purposes
  - name: TestData
    type: testdata
    access: proxy
    editable: true
    isDefault: false
    version: 1

  {{#if environment}}
  {{#eq environment 'production'}}
  # CloudWatch (Production only - if using AWS)
  # - name: CloudWatch
  #   type: cloudwatch
  #   access: proxy
  #   editable: true
  #   jsonData:
  #     authType: default
  #     defaultRegion: us-east-1
  #   version: 1

  # Azure Monitor (Production only - if using Azure)
  # - name: Azure Monitor
  #   type: grafana-azure-monitor-datasource
  #   access: proxy
  #   editable: true
  #   jsonData:
  #     subscriptionId: "${AZURE_SUBSCRIPTION_ID}"
  #     tenantId: "${AZURE_TENANT_ID}"
  #   version: 1

  # Google Cloud Monitoring (Production only - if using GCP)
  # - name: Google Cloud Monitoring
  #   type: stackdriver
  #   access: proxy
  #   editable: true
  #   jsonData:
  #     authenticationType: gce
  #   version: 1
  {{/eq}}
  {{/if}}