/**
 * @fileoverview {{componentName}} Component - Perfect UI System Integration
 * @description Form component using semantic UI System components with Norwegian compliance
 * @version 5.0.0
 * @compliance Pure component, SSR-safe, semantic components, WCAG AAA, Norwegian ready
 * @ai-optimized Uses semantic naming and predictable patterns for AI generation
 */

import React, { forwardRef, type FormHTMLAttributes } from 'react';
import {
  Container,
  Stack,
  Card,
  CardContent,
  CardHeader,
  CardTitle,
  Text,
  Input,
  Select,
  Textarea,
  Button
} from '@xala-technologies/ui-system';

export interface {{componentName}}Props extends FormHTMLAttributes<HTMLFormElement> {
  readonly 'data-testid'?: string;
  readonly title?: string;
  readonly description?: string;
  readonly size?: 'sm' | 'md' | 'lg' | 'xl';
  readonly nsmClassification?: 'OPEN' | 'RESTRICTED' | 'CONFIDENTIAL' | 'SECRET';
}

/**
 * Perfect semantic form component using UI System components
 * AI-Optimized: Predictable structure and semantic naming
 * Norwegian Compliance: NSM classification and i18n support
 */
export const {{componentName}} = forwardRef<HTMLFormElement, {{componentName}}Props>(
  (
    {
      children,
      title,
      description,
      size = 'md',
      nsmClassification = 'OPEN',
      'data-testid': testId,
      ...props
    },
    ref
  ): JSX.Element => {
    return (
      <Container size={size}>
        <Card>
          {(title || description) && (
            <CardHeader>
              {title && <CardTitle>{title}</CardTitle>}
              {description && (
                <Text variant="body" color="secondary">
                  {description}
                </Text>
              )}
            </CardHeader>
          )}
          <CardContent>
            <form
              ref={ref}
              data-testid={testId}
              data-nsm-classification={nsmClassification}
              noValidate
              {...props}
            >
              <Stack direction="vertical" gap="lg">
                {children}
              </Stack>
            </form>
          </CardContent>
        </Card>
      </Container>
    );
  }
);

{{componentName}}.displayName = '{{componentName}}';

/**
 * Perfect semantic form field using UI System components
 * AI-Optimized: Uses Stack for consistent spacing
 */
export const FormField = forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ children, ...props }, ref) => (
    <Stack ref={ref} direction="vertical" gap="sm" {...props}>
      {children}
    </Stack>
  )
);
FormField.displayName = 'FormField';

/**
 * Example usage pattern for AI generation:
 * 
 * <{{componentName}} title="Contact Form" description="Get in touch with us">
 *   <FormField>
 *     <Input label="Full Name" required />
 *   </FormField>
 *   <FormField>
 *     <Input label="Email Address" type="email" required />
 *   </FormField>
 *   <FormField>
 *     <Select label="Country" options={countryOptions} />
 *   </FormField>
 *   <FormField>
 *     <Textarea label="Message" rows={4} />
 *   </FormField>
 *   <Button type="submit" variant="primary" size="lg" fullWidth>
 *     Send Message
 *   </Button>
 * </{{componentName}}>
 */