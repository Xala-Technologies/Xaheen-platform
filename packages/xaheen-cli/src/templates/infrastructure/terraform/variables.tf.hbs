# Terraform variables configuration
# Generated by Xaheen CLI Terraform Generator
{{!-- Project: {{projectName}} --}}
{{!-- Environment: {{environment}} --}}
{{!-- Cloud Provider: {{cloudProvider}} --}}

# Project configuration
variable "project_name" {
  description = "Name of the project"
  type        = string
  default     = "{{projectName}}"
}

variable "environment" {
  description = "Environment name (development, staging, production)"
  type        = string
  default     = "{{environment}}"
  validation {
    condition     = contains(["development", "staging", "production"], var.environment)
    error_message = "Environment must be one of: development, staging, production."
  }
}

variable "region" {
  description = "{{#eq cloudProvider "aws"}}AWS region{{/eq}}{{#eq cloudProvider "azure"}}Azure region{{/eq}}{{#eq cloudProvider "gcp"}}GCP region{{/eq}}"
  type        = string
  default     = "{{region}}"
}

{{#eq cloudProvider "gcp"}}
variable "project_id" {
  description = "GCP Project ID"
  type        = string
}
{{/eq}}

variable "owner" {
  description = "Project owner"
  type        = string
  default     = "xaheen-team"
}

{{#if networking.vpc}}
# Networking variables
{{#eq cloudProvider "aws"}}
variable "vpc_cidr" {
  description = "CIDR block for VPC"
  type        = string
  default     = "10.0.0.0/16"
}
{{/eq}}

{{#eq cloudProvider "azure"}}
variable "address_space" {
  description = "Address space for VNet"
  type        = list(string)
  default     = ["10.0.0.0/16"]
}
{{/eq}}

{{#eq cloudProvider "gcp"}}
variable "network_cidr" {
  description = "CIDR block for VPC network"
  type        = string
  default     = "10.0.0.0/16"
}
{{/eq}}

variable "availability_zones" {
  description = "List of availability zones"
  type        = list(string)
  default     = []
}

{{#or (eq networking.subnets "public") (eq networking.subnets "both")}}
variable "public_subnets" {
  description = "List of public subnet CIDR blocks"
  type        = list(string)
  {{#eq cloudProvider "aws"}}
  default     = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
  {{/eq}}
  {{#eq cloudProvider "azure"}}
  default     = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
  {{/eq}}
  {{#eq cloudProvider "gcp"}}
  default     = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
  {{/eq}}
}
{{/or}}

{{#or (eq networking.subnets "private") (eq networking.subnets "both")}}
variable "private_subnets" {
  description = "List of private subnet CIDR blocks"
  type        = list(string)
  {{#eq cloudProvider "aws"}}
  default     = ["10.0.10.0/24", "10.0.20.0/24", "10.0.30.0/24"]
  {{/eq}}
  {{#eq cloudProvider "azure"}}
  default     = ["10.0.10.0/24", "10.0.20.0/24", "10.0.30.0/24"]
  {{/eq}}
  {{#eq cloudProvider "gcp"}}
  default     = ["10.0.10.0/24", "10.0.20.0/24", "10.0.30.0/24"]
  {{/eq}}
}
{{/or}}

variable "enable_nat_gateway" {
  description = "Enable NAT Gateway for private subnets"
  type        = bool
  default     = {{networking.enableNatGateway}}
}

variable "enable_vpn_gateway" {
  description = "Enable VPN Gateway"
  type        = bool
  default     = {{networking.enableVpnGateway}}
}
{{/if}}

{{#if compute.instances}}
# Compute variables
variable "instance_type" {
  description = "{{#eq cloudProvider "aws"}}EC2 instance type{{/eq}}{{#eq cloudProvider "azure"}}VM size{{/eq}}{{#eq cloudProvider "gcp"}}Machine type{{/eq}}"
  type        = string
  {{#eq cloudProvider "aws"}}
  default     = "{{#if compute.instances.[0].instanceType}}{{compute.instances.[0].instanceType}}{{else}}t3.micro{{/if}}"
  {{/eq}}
  {{#eq cloudProvider "azure"}}
  default     = "{{#if compute.instances.[0].instanceType}}{{compute.instances.[0].instanceType}}{{else}}Standard_B1ls{{/if}}"
  {{/eq}}
  {{#eq cloudProvider "gcp"}}
  default     = "{{#if compute.instances.[0].instanceType}}{{compute.instances.[0].instanceType}}{{else}}e2-micro{{/if}}"
  {{/eq}}
}

variable "min_size" {
  description = "Minimum number of instances"
  type        = number
  default     = {{#if compute.instances.[0].minSize}}{{compute.instances.[0].minSize}}{{else}}1{{/if}}
}

variable "max_size" {
  description = "Maximum number of instances"
  type        = number
  default     = {{#if compute.instances.[0].maxSize}}{{compute.instances.[0].maxSize}}{{else}}3{{/if}}
}

variable "desired_capacity" {
  description = "Desired number of instances"
  type        = number
  default     = {{#if compute.instances.[0].desiredCapacity}}{{compute.instances.[0].desiredCapacity}}{{else}}2{{/if}}
}

variable "enable_load_balancer" {
  description = "Enable Load Balancer"
  type        = bool
  default     = {{compute.loadBalancer}}
}

variable "enable_auto_scaling" {
  description = "Enable Auto Scaling"
  type        = bool
  default     = {{compute.autoScaling}}
}
{{/if}}

{{#if storage.databases}}
# Storage variables
variable "db_engine" {
  description = "Database engine"
  type        = string
  default     = "{{#if storage.databases.[0].engine}}{{storage.databases.[0].engine}}{{else}}postgresql{{/if}}"
  validation {
    condition = contains([
      "postgresql", "mysql", "mariadb", "oracle", "sqlserver", 
      "mongodb", "redis", "elasticsearch"
    ], var.db_engine)
    error_message = "Database engine must be one of the supported engines."
  }
}

variable "db_version" {
  description = "Database engine version"
  type        = string
  default     = "{{#if storage.databases.[0].version}}{{storage.databases.[0].version}}{{else}}15{{/if}}"
}

variable "db_instance_class" {
  description = "Database instance class"
  type        = string
  {{#eq cloudProvider "aws"}}
  default     = "{{#if storage.databases.[0].instanceClass}}{{storage.databases.[0].instanceClass}}{{else}}db.t3.micro{{/if}}"
  {{/eq}}
  {{#eq cloudProvider "azure"}}
  default     = "{{#if storage.databases.[0].instanceClass}}{{storage.databases.[0].instanceClass}}{{else}}GP_Gen5_2{{/if}}"
  {{/eq}}
  {{#eq cloudProvider "gcp"}}
  default     = "{{#if storage.databases.[0].instanceClass}}{{storage.databases.[0].instanceClass}}{{else}}db-f1-micro{{/if}}"
  {{/eq}}
}

variable "db_allocated_storage" {
  description = "Database allocated storage in GB"
  type        = number
  default     = {{#if storage.databases.[0].allocatedStorage}}{{storage.databases.[0].allocatedStorage}}{{else}}20{{/if}}
}
{{/if}}

variable "enable_object_storage" {
  description = "Enable object storage ({{#eq cloudProvider "aws"}}S3{{/eq}}{{#eq cloudProvider "azure"}}Blob Storage{{/eq}}{{#eq cloudProvider "gcp"}}Cloud Storage{{/eq}})"
  type        = bool
  default     = {{storage.objectStorage}}
}

variable "enable_file_system" {
  description = "Enable managed file system"
  type        = bool
  default     = {{storage.fileSystem}}
}

# Security variables
variable "enable_kms" {
  description = "Enable key management service"
  type        = bool
  default     = {{security.keyManagement}}
}

variable "enable_secrets_manager" {
  description = "Enable secrets management service"
  type        = bool
  default     = {{security.secretsManager}}
}

variable "enable_waf" {
  description = "Enable Web Application Firewall"
  type        = bool
  default     = {{security.waf}}
}

variable "iam_roles" {
  description = "List of IAM roles to create"
  type        = list(string)
  default     = [{{#each security.iamRoles}}"{{this}}"{{#unless @last}}, {{/unless}}{{/each}}]
}

# Monitoring variables
variable "enable_cloudwatch" {
  description = "Enable cloud monitoring service"
  type        = bool
  default     = {{monitoring.cloudWatch}}
}

variable "enable_logging" {
  description = "Enable centralized logging"
  type        = bool
  default     = {{monitoring.logging}}
}

variable "enable_alerting" {
  description = "Enable alerting"
  type        = bool
  default     = {{monitoring.alerting}}
}

variable "enable_tracing" {
  description = "Enable distributed tracing"
  type        = bool
  default     = {{monitoring.tracing}}
}

# Compliance variables
variable "encryption_enabled" {
  description = "Enable encryption at rest and in transit"
  type        = bool
  default     = {{compliance.encryption}}
}

variable "backup_enabled" {
  description = "Enable automated backups"
  type        = bool
  default     = {{compliance.backup}}
}

variable "backup_retention_days" {
  description = "Backup retention period in days"
  type        = number
  default     = {{compliance.retention}}
  validation {
    condition     = var.backup_retention_days >= 1 && var.backup_retention_days <= 365
    error_message = "Backup retention must be between 1 and 365 days."
  }
}

variable "audit_logs_enabled" {
  description = "Enable audit logging"
  type        = bool
  default     = {{compliance.auditLogs}}
}