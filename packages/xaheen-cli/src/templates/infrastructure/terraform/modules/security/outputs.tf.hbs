# Security module outputs
# Generated by Xaheen CLI Terraform Generator

{{#eq cloudProvider "aws"}}
{{#if security.keyManagement}}
output "kms_key_id" {
  description = "KMS key ID"
  value       = aws_kms_key.main.key_id
  sensitive   = true
}

output "kms_key_arn" {
  description = "KMS key ARN"
  value       = aws_kms_key.main.arn
  sensitive   = true
}

output "kms_alias_name" {
  description = "KMS key alias name"
  value       = aws_kms_alias.main.name
}
{{/if}}

output "ec2_role_arn" {
  description = "EC2 IAM role ARN"
  value       = aws_iam_role.ec2_role.arn
}

output "ec2_instance_profile_name" {
  description = "EC2 instance profile name"
  value       = aws_iam_instance_profile.ec2_profile.name
}

output "iam_role_arns" {
  description = "ARNs of created IAM roles"
  value = merge(
    {
      ec2 = aws_iam_role.ec2_role.arn
    },
    {{#each security.iamRoles}}
    {
      {{this}} = aws_iam_role.{{this}}_role.arn
    }{{#unless @last}},{{/unless}}
    {{/each}}
  )
}

{{#if security.secretsManager}}
output "secrets_manager_secret_arns" {
  description = "ARNs of Secrets Manager secrets"
  value = {
    db_credentials = aws_secretsmanager_secret.db_credentials.arn
    api_keys      = aws_secretsmanager_secret.api_keys.arn
    app_secrets   = aws_secretsmanager_secret.app_secrets.arn
  }
  sensitive = true
}
{{/if}}

{{#if security.waf}}
output "waf_web_acl_arn" {
  description = "WAF Web ACL ARN"
  value       = aws_wafv2_web_acl.main.arn
}

output "waf_web_acl_id" {
  description = "WAF Web ACL ID"
  value       = aws_wafv2_web_acl.main.id
}
{{/if}}

{{#if security.certificateManager}}
output "acm_certificate_arn" {
  description = "ACM certificate ARN"
  value       = var.domain_name != null ? aws_acm_certificate.main[0].arn : null
}

output "acm_certificate_domain_validation_options" {
  description = "ACM certificate domain validation options"
  value       = var.domain_name != null ? aws_acm_certificate.main[0].domain_validation_options : null
}
{{/if}}
{{/eq}}

{{#eq cloudProvider "azure"}}
{{#if security.keyManagement}}
output "key_vault_id" {
  description = "Key Vault ID"
  value       = azurerm_key_vault.main.id
}

output "key_vault_uri" {
  description = "Key Vault URI"
  value       = azurerm_key_vault.main.vault_uri
  sensitive   = true
}

output "key_vault_name" {
  description = "Key Vault name"
  value       = azurerm_key_vault.main.name
}
{{/if}}

output "user_assigned_identity_id" {
  description = "User assigned identity ID"
  value       = azurerm_user_assigned_identity.main.id
}

output "user_assigned_identity_principal_id" {
  description = "User assigned identity principal ID"
  value       = azurerm_user_assigned_identity.main.principal_id
}

output "user_assigned_identity_client_id" {
  description = "User assigned identity client ID"
  value       = azurerm_user_assigned_identity.main.client_id
}

{{#if security.waf}}
output "application_gateway_id" {
  description = "Application Gateway ID"
  value       = azurerm_application_gateway.main.id
}

output "application_gateway_public_ip" {
  description = "Application Gateway public IP"
  value       = azurerm_public_ip.waf.ip_address
}
{{/if}}
{{/eq}}

{{#eq cloudProvider "gcp"}}
{{#if security.keyManagement}}
output "kms_key_ring_id" {
  description = "KMS key ring ID"
  value       = google_kms_key_ring.main.id
}

output "kms_crypto_key_id" {
  description = "KMS crypto key ID"
  value       = google_kms_crypto_key.main.id
  sensitive   = true
}

output "kms_crypto_key_name" {
  description = "KMS crypto key name"
  value       = google_kms_crypto_key.main.name
}
{{/if}}

output "service_account_email" {
  description = "Main service account email"
  value       = google_service_account.main.email
}

output "service_account_id" {
  description = "Main service account ID"
  value       = google_service_account.main.id
}

output "service_account_unique_id" {
  description = "Main service account unique ID"
  value       = google_service_account.main.unique_id
}

output "service_account_emails" {
  description = "All service account emails"
  value = merge(
    {
      main = google_service_account.main.email
    },
    {{#each security.iamRoles}}
    {
      {{this}} = google_service_account.{{this}}.email
    }{{#unless @last}},{{/unless}}
    {{/each}}
  )
}

{{#if security.secretsManager}}
output "secret_manager_secret_ids" {
  description = "Secret Manager secret IDs"
  value = {
    db_credentials = google_secret_manager_secret.db_credentials.secret_id
    api_keys      = google_secret_manager_secret.api_keys.secret_id
  }
  sensitive = true
}
{{/if}}

{{#if security.waf}}
output "security_policy_id" {
  description = "Cloud Armor security policy ID"
  value       = google_compute_security_policy.main.id
}

output "security_policy_name" {
  description = "Cloud Armor security policy name"
  value       = google_compute_security_policy.main.name
}

output "security_policy_self_link" {
  description = "Cloud Armor security policy self link"
  value       = google_compute_security_policy.main.self_link
}
{{/if}}
{{/eq}}