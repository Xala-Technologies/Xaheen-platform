# Storage module outputs
# Generated by Xaheen CLI Terraform Generator

{{#eq cloudProvider "aws"}}
{{#if storage.databases}}
output "database_endpoint" {
  description = "RDS instance endpoint"
  value       = aws_db_instance.main.endpoint
  sensitive   = true
}

output "database_port" {
  description = "RDS instance port"
  value       = aws_db_instance.main.port
}

output "database_name" {
  description = "RDS instance database name"
  value       = aws_db_instance.main.db_name
}

output "database_id" {
  description = "RDS instance ID"
  value       = aws_db_instance.main.id
}

output "database_arn" {
  description = "RDS instance ARN"
  value       = aws_db_instance.main.arn
}

output "database_security_group_id" {
  description = "Database security group ID"
  value       = aws_security_group.rds.id
}
{{/if}}

{{#if storage.objectStorage}}
output "s3_bucket_id" {
  description = "S3 bucket ID"
  value       = aws_s3_bucket.main.id
}

output "s3_bucket_arn" {
  description = "S3 bucket ARN"
  value       = aws_s3_bucket.main.arn
}

output "s3_bucket_domain_name" {
  description = "S3 bucket domain name"
  value       = aws_s3_bucket.main.bucket_domain_name
}

output "s3_bucket_regional_domain_name" {
  description = "S3 bucket regional domain name"
  value       = aws_s3_bucket.main.bucket_regional_domain_name
}
{{/if}}

{{#if storage.fileSystem}}
output "efs_file_system_id" {
  description = "EFS file system ID"
  value       = aws_efs_file_system.main.id
}

output "efs_file_system_dns_name" {
  description = "EFS file system DNS name"
  value       = aws_efs_file_system.main.dns_name
}

output "efs_mount_target_ids" {
  description = "EFS mount target IDs"
  value       = aws_efs_mount_target.main[*].id
}

output "efs_security_group_id" {
  description = "EFS security group ID"
  value       = aws_security_group.efs.id
}
{{/if}}
{{/eq}}

{{#eq cloudProvider "azure"}}
{{#if storage.databases}}
output "sql_server_id" {
  description = "SQL Server ID"
  value       = azurerm_mssql_server.main.id
}

output "sql_server_fqdn" {
  description = "SQL Server FQDN"
  value       = azurerm_mssql_server.main.fully_qualified_domain_name
  sensitive   = true
}

output "sql_database_id" {
  description = "SQL Database ID"
  value       = azurerm_mssql_database.main.id
}

output "sql_database_name" {
  description = "SQL Database name"
  value       = azurerm_mssql_database.main.name
}

output "sql_private_endpoint_id" {
  description = "SQL private endpoint ID"
  value       = azurerm_private_endpoint.sql.id
}
{{/if}}

{{#if storage.objectStorage}}
output "storage_account_id" {
  description = "Storage account ID"
  value       = azurerm_storage_account.main.id
}

output "storage_account_name" {
  description = "Storage account name"
  value       = azurerm_storage_account.main.name
}

output "storage_account_primary_blob_endpoint" {
  description = "Storage account primary blob endpoint"
  value       = azurerm_storage_account.main.primary_blob_endpoint
}

output "storage_container_name" {
  description = "Storage container name"
  value       = azurerm_storage_container.main.name
}

output "storage_private_endpoint_id" {
  description = "Storage private endpoint ID"
  value       = azurerm_private_endpoint.storage.id
}
{{/if}}

{{#if storage.fileSystem}}
output "netapp_account_id" {
  description = "NetApp account ID"
  value       = azurerm_netapp_account.main.id
}

output "netapp_pool_id" {
  description = "NetApp pool ID"
  value       = azurerm_netapp_pool.main.id
}

output "netapp_volume_id" {
  description = "NetApp volume ID"
  value       = azurerm_netapp_volume.main.id
}

output "netapp_volume_mount_path" {
  description = "NetApp volume mount path"
  value       = azurerm_netapp_volume.main.mount_ip_addresses[0]
}
{{/if}}
{{/eq}}

{{#eq cloudProvider "gcp"}}
{{#if storage.databases}}
output "database_instance_name" {
  description = "Cloud SQL instance name"
  value       = google_sql_database_instance.main.name
}

output "database_connection_name" {
  description = "Cloud SQL instance connection name"
  value       = google_sql_database_instance.main.connection_name
  sensitive   = true
}

output "database_private_ip_address" {
  description = "Cloud SQL instance private IP address"
  value       = google_sql_database_instance.main.private_ip_address
  sensitive   = true
}

output "database_name" {
  description = "Database name"
  value       = google_sql_database.main.name
}

output "database_self_link" {
  description = "Cloud SQL instance self link"
  value       = google_sql_database_instance.main.self_link
}

output "ssl_cert" {
  description = "SSL certificate for database connection"
  value       = google_sql_ssl_cert.client_cert.cert
  sensitive   = true
}

output "ssl_private_key" {
  description = "SSL private key for database connection"
  value       = google_sql_ssl_cert.client_cert.private_key
  sensitive   = true
}
{{/if}}

{{#if storage.objectStorage}}
output "bucket_name" {
  description = "Cloud Storage bucket name"
  value       = google_storage_bucket.main.name
}

output "bucket_url" {
  description = "Cloud Storage bucket URL"
  value       = google_storage_bucket.main.url
}

output "bucket_self_link" {
  description = "Cloud Storage bucket self link"
  value       = google_storage_bucket.main.self_link
}
{{/if}}

{{#if storage.fileSystem}}
output "filestore_instance_name" {
  description = "Filestore instance name"
  value       = google_filestore_instance.main.name
}

output "filestore_ip_addresses" {
  description = "Filestore instance IP addresses"
  value       = google_filestore_instance.main.networks[0].ip_addresses
}

output "filestore_file_share_name" {
  description = "Filestore file share name"
  value       = google_filestore_instance.main.file_shares[0].name
}
{{/if}}
{{/eq}}