# Storage module variables
# Generated by Xaheen CLI Terraform Generator

variable "project_name" {
  description = "Name of the project"
  type        = string
}

variable "environment" {
  description = "Environment name (development, staging, production)"
  type        = string
}

{{#eq cloudProvider "aws"}}
variable "vpc_id" {
  description = "ID of the VPC"
  type        = string
}

variable "private_subnets" {
  description = "List of private subnet IDs"
  type        = list(string)
}

variable "app_security_group_ids" {
  description = "List of application security group IDs"
  type        = list(string)
  default     = []
}
{{/eq}}

{{#eq cloudProvider "azure"}}
variable "resource_group_name" {
  description = "Name of the resource group"
  type        = string
}

variable "location" {
  description = "Azure region"
  type        = string
}

variable "subnet_ids" {
  description = "List of subnet IDs"
  type        = list(string)
}

variable "db_sku_name" {
  description = "Database SKU name"
  type        = string
  default     = "S0"
}
{{/eq}}

{{#eq cloudProvider "gcp"}}
variable "network_id" {
  description = "ID of the VPC network"
  type        = string
}

variable "region" {
  description = "GCP region"
  type        = string
}

variable "project_id" {
  description = "GCP project ID"
  type        = string
}

variable "database_version" {
  description = "Database version"
  type        = string
  default     = "POSTGRES_15"
}

variable "db_tier" {
  description = "Database tier"
  type        = string
  default     = "db-f1-micro"
}

variable "db_disk_size" {
  description = "Database disk size in GB"
  type        = number
  default     = 10
}
{{/eq}}

# Database configuration
{{#if storage.databases}}
variable "db_engine" {
  description = "Database engine"
  type        = string
  default     = "{{storage.databases.[0].engine}}"
  
  validation {
    condition = contains(["postgresql", "mysql", "mariadb", "oracle", "sqlserver", "mongodb", "redis", "elasticsearch"], var.db_engine)
    error_message = "Database engine must be one of: postgresql, mysql, mariadb, oracle, sqlserver, mongodb, redis, elasticsearch."
  }
}

variable "db_version" {
  description = "Database engine version"
  type        = string
  default     = "{{storage.databases.[0].version}}"
}

variable "db_instance_class" {
  description = "Database instance class"
  type        = string
  default     = "{{storage.databases.[0].instanceClass}}"
}

variable "db_allocated_storage" {
  description = "Database allocated storage in GB"
  type        = number
  default     = {{storage.databases.[0].allocatedStorage}}
}

variable "db_username" {
  description = "Database master username"
  type        = string
  default     = "dbadmin"
  sensitive   = true
}

variable "db_password" {
  description = "Database master password"
  type        = string
  sensitive   = true
}

variable "backup_window" {
  description = "Database backup window"
  type        = string
  default     = "{{storage.databases.[0].backupWindow}}"
}

variable "maintenance_window" {
  description = "Database maintenance window"
  type        = string
  default     = "{{storage.databases.[0].maintenanceWindow}}"
}
{{/if}}

variable "enable_object_storage" {
  description = "Enable object storage (S3/Blob/GCS)"
  type        = bool
  default     = {{storage.objectStorage}}
}

variable "enable_file_system" {
  description = "Enable managed file system"
  type        = bool
  default     = {{storage.fileSystem}}
}

variable "encryption_enabled" {
  description = "Enable encryption at rest"
  type        = bool
  default     = {{compliance.encryption}}
}

variable "backup_enabled" {
  description = "Enable automated backups"
  type        = bool
  default     = {{compliance.backup}}
}

variable "backup_retention_days" {
  description = "Backup retention period in days"
  type        = number
  default     = {{compliance.retention}}
}

variable "audit_logs_enabled" {
  description = "Enable audit logging"
  type        = bool
  default     = {{compliance.auditLogs}}
}

variable "kms_key_id" {
  description = "KMS key ID for encryption"
  type        = string
  default     = null
}

variable "tags" {
  description = "A map of tags to assign to the resource"
  type        = map(string)
  default     = {}
}