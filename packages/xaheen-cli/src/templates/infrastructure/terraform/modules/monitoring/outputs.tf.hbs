# Monitoring module outputs
# Generated by Xaheen CLI Terraform Generator

{{#eq cloudProvider "aws"}}
{{#if monitoring.logging}}
output "log_group_names" {
  description = "Names of CloudWatch log groups"
  value = compact([
    aws_cloudwatch_log_group.app.name,
    aws_cloudwatch_log_group.application.name,
    var.vpc_id != null ? aws_cloudwatch_log_group.vpc_flow_logs[0].name : null
  ])
}

output "log_group_arns" {
  description = "ARNs of CloudWatch log groups"
  value = compact([
    aws_cloudwatch_log_group.app.arn,
    aws_cloudwatch_log_group.application.arn,
    var.vpc_id != null ? aws_cloudwatch_log_group.vpc_flow_logs[0].arn : null
  ])
}
{{/if}}

{{#if monitoring.cloudWatch}}
output "dashboard_name" {
  description = "Name of the CloudWatch dashboard"
  value       = aws_cloudwatch_dashboard.main.dashboard_name
}

output "dashboard_url" {
  description = "URL of the CloudWatch dashboard"
  value       = "https://${data.aws_region.current.name}.console.aws.amazon.com/cloudwatch/home?region=${data.aws_region.current.name}#dashboards:name=${aws_cloudwatch_dashboard.main.dashboard_name}"
}
{{/if}}

{{#if monitoring.alerting}}
output "sns_topic_arns" {
  description = "ARNs of SNS topics for alerts"
  value       = [aws_sns_topic.alerts.arn]
}

output "alarm_names" {
  description = "Names of CloudWatch alarms"
  value = compact([
    var.autoscaling_group_name != null ? aws_cloudwatch_metric_alarm.high_cpu[0].alarm_name : null,
    var.database_instance_id != null ? aws_cloudwatch_metric_alarm.database_cpu[0].alarm_name : null,
    var.database_instance_id != null ? aws_cloudwatch_metric_alarm.database_connections[0].alarm_name : null,
    var.load_balancer_arn_suffix != null ? aws_cloudwatch_metric_alarm.alb_response_time[0].alarm_name : null,
    var.load_balancer_arn_suffix != null ? aws_cloudwatch_metric_alarm.alb_5xx_errors[0].alarm_name : null
  ])
}
{{/if}}

{{#if monitoring.tracing}}
output "xray_sampling_rule_name" {
  description = "Name of the X-Ray sampling rule"
  value       = aws_xray_sampling_rule.main.rule_name
}
{{/if}}
{{/eq}}

{{#eq cloudProvider "azure"}}
{{#if monitoring.logging}}
output "log_analytics_workspace_id" {
  description = "ID of the Log Analytics workspace"
  value       = azurerm_log_analytics_workspace.main.id
}

output "log_analytics_workspace_name" {
  description = "Name of the Log Analytics workspace"
  value       = azurerm_log_analytics_workspace.main.name
}

output "application_insights_id" {
  description = "ID of Application Insights"
  value       = azurerm_application_insights.main.id
}

output "application_insights_instrumentation_key" {
  description = "Instrumentation key of Application Insights"
  value       = azurerm_application_insights.main.instrumentation_key
  sensitive   = true
}

output "application_insights_connection_string" {
  description = "Connection string of Application Insights"
  value       = azurerm_application_insights.main.connection_string
  sensitive   = true
}
{{/if}}

{{#if monitoring.alerting}}
output "action_group_id" {
  description = "ID of the monitor action group"
  value       = azurerm_monitor_action_group.main.id
}

output "metric_alert_ids" {
  description = "IDs of metric alerts"
  value = compact([
    var.vmss_id != null ? azurerm_monitor_metric_alert.cpu_percent[0].id : null,
    var.sql_server_id != null ? azurerm_monitor_metric_alert.database_cpu[0].id : null,
    var.sql_server_id != null ? azurerm_monitor_metric_alert.database_connections[0].id : null
  ])
}
{{/if}}

{{#if monitoring.tracing}}
output "web_test_id" {
  description = "ID of the Application Insights web test"
  value       = azurerm_application_insights_web_test.main.id
}
{{/if}}
{{/eq}}

{{#eq cloudProvider "gcp"}}
{{#if monitoring.logging}}
output "log_sink_name" {
  description = "Name of the logging sink"
  value       = google_logging_project_sink.main.name
}

output "log_sink_writer_identity" {
  description = "Writer identity of the logging sink"
  value       = google_logging_project_sink.main.writer_identity
}

output "logs_bucket_name" {
  description = "Name of the logs storage bucket"
  value       = google_storage_bucket.logs.name
}

output "logs_bucket_url" {
  description = "URL of the logs storage bucket"
  value       = google_storage_bucket.logs.url
}
{{/if}}

{{#if monitoring.alerting}}
output "notification_channel_names" {
  description = "Names of notification channels"
  value = compact([
    google_monitoring_notification_channel.email.name,
    var.alert_phone != null ? google_monitoring_notification_channel.sms[0].name : null
  ])
}

output "alert_policy_names" {
  description = "Names of alert policies"
  value = compact([
    var.instance_group_name != null ? google_monitoring_alert_policy.cpu_usage[0].name : null,
    var.database_instance_name != null ? google_monitoring_alert_policy.database_cpu[0].name : null,
    var.database_instance_name != null ? google_monitoring_alert_policy.database_connections[0].name : null
  ])
}
{{/if}}

{{#if monitoring.tracing}}
output "uptime_check_id" {
  description = "ID of the uptime check"
  value       = google_monitoring_uptime_check_config.main.uptime_check_id
}

output "uptime_check_name" {
  description = "Name of the uptime check"
  value       = google_monitoring_uptime_check_config.main.name
}
{{/if}}
{{/eq}}