# Terraform outputs configuration
# Generated by Xaheen CLI Terraform Generator
{{!-- Project: {{projectName}} --}}
{{!-- Environment: {{environment}} --}}
{{!-- Cloud Provider: {{cloudProvider}} --}}

{{#eq cloudProvider "aws"}}
# AWS Account information
output "account_id" {
  description = "AWS Account ID"
  value       = data.aws_caller_identity.current.account_id
}

output "region" {
  description = "AWS Region"
  value       = data.aws_region.current.name
}
{{/eq}}

{{#eq cloudProvider "azure"}}
# Azure Subscription information
output "subscription_id" {
  description = "Azure Subscription ID"
  value       = data.azurerm_subscription.current.subscription_id
}

output "tenant_id" {
  description = "Azure Tenant ID"
  value       = data.azurerm_client_config.current.tenant_id
}
{{/eq}}

{{#eq cloudProvider "gcp"}}
# GCP Project information
output "project_id" {
  description = "GCP Project ID"
  value       = data.google_project.current.project_id
}

output "project_number" {
  description = "GCP Project Number"
  value       = data.google_project.current.number
}
{{/eq}}

{{#if networking.vpc}}
# Networking outputs
{{#eq cloudProvider "aws"}}
output "vpc_id" {
  description = "ID of the VPC"
  value       = module.networking.vpc_id
}

output "vpc_cidr_block" {
  description = "CIDR block of the VPC"
  value       = module.networking.vpc_cidr_block
}

output "internet_gateway_id" {
  description = "Internet Gateway ID"
  value       = module.networking.internet_gateway_id
}

{{#if networking.enableNatGateway}}
output "nat_gateway_ids" {
  description = "List of NAT Gateway IDs"
  value       = module.networking.nat_gateway_ids
}
{{/if}}
{{/eq}}

{{#eq cloudProvider "azure"}}
output "virtual_network_id" {
  description = "ID of the Virtual Network"
  value       = module.networking.virtual_network_id
}

output "resource_group_name" {
  description = "Name of the Resource Group"
  value       = module.networking.resource_group_name
}
{{/eq}}

{{#eq cloudProvider "gcp"}}
output "network_id" {
  description = "ID of the VPC Network"
  value       = module.networking.network_id
}

output "network_self_link" {
  description = "Self link of the VPC Network"
  value       = module.networking.network_self_link
}
{{/eq}}

{{#or (eq networking.subnets "public") (eq networking.subnets "both")}}
output "public_subnets" {
  description = "List of IDs of the public subnets"
  value       = module.networking.public_subnets
}
{{/or}}

{{#or (eq networking.subnets "private") (eq networking.subnets "both")}}
output "private_subnets" {
  description = "List of IDs of the private subnets"
  value       = module.networking.private_subnets
}
{{/or}}
{{/if}}

{{#if compute.instances}}
# Compute outputs
output "instance_ids" {
  description = "List of instance IDs"
  value       = module.compute.instance_ids
}

output "instance_public_ips" {
  description = "List of public IP addresses assigned to the instances"
  value       = module.compute.instance_public_ips
}

output "instance_private_ips" {
  description = "List of private IP addresses assigned to the instances"
  value       = module.compute.instance_private_ips
}

{{#if compute.loadBalancer}}
output "load_balancer_dns_name" {
  description = "DNS name of the load balancer"
  value       = module.compute.load_balancer_dns_name
}

{{#eq cloudProvider "aws"}}
output "load_balancer_zone_id" {
  description = "Canonical hosted zone ID of the load balancer"
  value       = module.compute.load_balancer_zone_id
}
{{/eq}}

{{#eq cloudProvider "azure"}}
output "load_balancer_frontend_ip" {
  description = "Frontend IP configuration of the load balancer"
  value       = module.compute.load_balancer_frontend_ip
}
{{/eq}}

{{#eq cloudProvider "gcp"}}
output "load_balancer_self_link" {
  description = "Self link of the load balancer"
  value       = module.compute.load_balancer_self_link
}
{{/eq}}
{{/if}}
{{/if}}

{{#if storage.databases}}
# Storage outputs
output "database_endpoint" {
  description = "Database endpoint"
  value       = module.storage.database_endpoint
  sensitive   = true
}

output "database_port" {
  description = "Database port"
  value       = module.storage.database_port
}

output "database_name" {
  description = "Database name"
  value       = module.storage.database_name
}

{{#if storage.databases.[0].encrypted}}
output "database_kms_key_id" {
  description = "KMS key ID used for database encryption"
  value       = module.storage.database_kms_key_id
  sensitive   = true
}
{{/if}}
{{/if}}

{{#if storage.objectStorage}}
{{#eq cloudProvider "aws"}}
output "s3_bucket_id" {
  description = "S3 bucket ID"
  value       = module.storage.s3_bucket_id
}

output "s3_bucket_domain_name" {
  description = "S3 bucket domain name"
  value       = module.storage.s3_bucket_domain_name
}

output "s3_bucket_arn" {
  description = "S3 bucket ARN"
  value       = module.storage.s3_bucket_arn
}
{{/eq}}

{{#eq cloudProvider "azure"}}
output "storage_account_name" {
  description = "Storage account name"
  value       = module.storage.storage_account_name
}

output "storage_account_primary_endpoint" {
  description = "Primary endpoint of the storage account"
  value       = module.storage.storage_account_primary_endpoint
}
{{/eq}}

{{#eq cloudProvider "gcp"}}
output "storage_bucket_name" {
  description = "Cloud Storage bucket name"
  value       = module.storage.storage_bucket_name
}

output "storage_bucket_url" {
  description = "Cloud Storage bucket URL"
  value       = module.storage.storage_bucket_url
}
{{/eq}}
{{/if}}

# Security outputs
{{#if security.keyManagement}}
output "kms_key_id" {
  description = "KMS key ID"
  value       = module.security.kms_key_id
  sensitive   = true
}

output "kms_key_arn" {
  description = "KMS key ARN"
  value       = module.security.kms_key_arn
  sensitive   = true
}
{{/if}}

output "iam_role_arns" {
  description = "ARNs of created IAM roles"
  value       = module.security.iam_role_arns
}

{{#if security.secretsManager}}
{{#eq cloudProvider "aws"}}
output "secrets_manager_secret_arns" {
  description = "ARNs of Secrets Manager secrets"
  value       = module.security.secrets_manager_secret_arns
  sensitive   = true
}
{{/eq}}

{{#eq cloudProvider "azure"}}
output "key_vault_uri" {
  description = "URI of the Key Vault"
  value       = module.security.key_vault_uri
  sensitive   = true
}
{{/eq}}

{{#eq cloudProvider "gcp"}}
output "secret_manager_secret_ids" {
  description = "IDs of Secret Manager secrets"
  value       = module.security.secret_manager_secret_ids
  sensitive   = true
}
{{/eq}}
{{/if}}

{{#if monitoring.logging}}
# Monitoring outputs
{{#eq cloudProvider "aws"}}
output "log_group_names" {
  description = "Names of CloudWatch log groups"
  value       = module.monitoring.log_group_names
}

output "log_group_arns" {
  description = "ARNs of CloudWatch log groups"
  value       = module.monitoring.log_group_arns
}
{{/eq}}

{{#eq cloudProvider "azure"}}
output "log_analytics_workspace_id" {
  description = "ID of the Log Analytics workspace"
  value       = module.monitoring.log_analytics_workspace_id
}
{{/eq}}

{{#eq cloudProvider "gcp"}}
output "logging_sink_names" {
  description = "Names of Cloud Logging sinks"
  value       = module.monitoring.logging_sink_names
}
{{/eq}}
{{/if}}

{{#if monitoring.alerting}}
{{#eq cloudProvider "aws"}}
output "sns_topic_arns" {
  description = "ARNs of SNS topics for alerts"
  value       = module.monitoring.sns_topic_arns
}
{{/eq}}

{{#eq cloudProvider "azure"}}
output "action_group_ids" {
  description = "IDs of Action Groups for alerts"
  value       = module.monitoring.action_group_ids
}
{{/eq}}

{{#eq cloudProvider "gcp"}}
output "notification_channel_names" {
  description = "Names of Notification Channels for alerts"
  value       = module.monitoring.notification_channel_names
}
{{/eq}}
{{/if}}

# Cost and resource summary
output "resource_summary" {
  description = "Summary of created resources"
  value = {
    project_name = var.project_name
    environment  = var.environment
    region       = var.region
    {{#if networking.vpc}}
    networking_enabled = true
    {{/if}}
    {{#if compute.instances}}
    compute_instances = length(module.compute.instance_ids)
    {{/if}}
    {{#if storage.databases}}
    database_enabled = true
    {{/if}}
    {{#if storage.objectStorage}}
    object_storage_enabled = true
    {{/if}}
    encryption_enabled = var.encryption_enabled
    backup_enabled     = var.backup_enabled
    monitoring_enabled = var.enable_logging
    created_at = timestamp()
  }
}