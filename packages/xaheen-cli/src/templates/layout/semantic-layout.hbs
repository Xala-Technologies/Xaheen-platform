/**
 * {{className}} Layout
 *
 * Generated by Xaheen CLI Layout Generator - Semantic UI Version
 * @since {{timestamp}}
 */

import React from 'react';
{{#if useSemanticUI}}
{{semanticImports}}
{{/if}}
{{#if useDesignTokens}}
{{designTokenImports}}
{{/if}}
{{#if useI18n}}
{{i18nHelpers}}
{{/if}}

interface {{className}}LayoutProps {
  readonly children: React.ReactNode;
  readonly className?: string;
  readonly 'data-testid'?: string;
  {{#if hasHeader}}
  readonly header?: React.ReactNode;
  {{/if}}
  {{#if hasSidebar}}
  readonly sidebar?: React.ReactNode;
  readonly sidebarCollapsed?: boolean;
  {{/if}}
  {{#if hasFooter}}
  readonly footer?: React.ReactNode;
  {{/if}}
}

/**
 * {{className}}Layout - A semantic layout component following Xala design system
 * 
 * {{#if description}}
 * {{description}}
 * {{else}}
 * A responsive, accessible layout component built with semantic UI components.
 * Provides consistent structure and spacing across the application.
 * {{/if}}
 * 
 * @param props - Layout properties
 * @returns JSX.Element
 */
export const {{className}}Layout = ({
  children,
  className,
  'data-testid': testId = '{{kebabCase}}-layout',
  {{#if hasHeader}}
  header,
  {{/if}}
  {{#if hasSidebar}}
  sidebar,
  sidebarCollapsed = false,
  {{/if}}
  {{#if hasFooter}}
  footer,
  {{/if}}
}: {{className}}LayoutProps): JSX.Element => {
  {{#if useI18n}}
  const { t } = useTranslation();
  {{/if}}

  return (
    <Container 
      maxWidth="full" 
      className={`min-h-screen bg-gray-50 ${className || ''}`}
      data-testid={testId}
    >
      {{#if (eq layoutType 'admin')}}
      {/* Admin Layout Structure */}
      <Stack direction="column" spacing="none" className="min-h-screen">
        {{#if hasHeader}}
        {/* Header */}
        <Card 
          variant="elevated" 
          className="border-b shadow-sm z-10"
          padding={spacing.md}
        >
          {header || (
            <Stack direction="row" justify="between" align="center">
              <Text variant="heading" size="xl" weight="bold" color="gray.900">
                {{#if useI18n}}
                {t('layout.admin.title', 'Admin Dashboard')}
                {{else}}
                Admin Dashboard
                {{/if}}
              </Text>
              <Stack direction="row" spacing={spacing.sm} align="center">
                {/* Header actions can go here */}
              </Stack>
            </Stack>
          )}
        </Card>
        {{/if}}

        <Stack direction="row" spacing="none" className="flex-1">
          {{#if hasSidebar}}
          {/* Sidebar */}
          <Card 
            variant="subtle" 
            className={`border-r transition-all duration-300 ${
              sidebarCollapsed ? 'w-16' : 'w-64'
            }`}
            padding={spacing.md}
          >
            {sidebar || (
              <Stack spacing={spacing.md}>
                <Text variant="body" weight="medium" color="gray.700">
                  {{#if useI18n}}
                  {t('layout.sidebar.navigation', 'Navigation')}
                  {{else}}
                  Navigation
                  {{/if}}
                </Text>
                {/* Navigation items would go here */}
              </Stack>
            )}
          </Card>
          {{/if}}

          {/* Main Content */}
          <Container 
            maxWidth="full" 
            className="flex-1 overflow-auto"
            padding={spacing.lg}
          >
            <main role="main" aria-label="Main content">
              {children}
            </main>
          </Container>
        </Stack>

        {{#if hasFooter}}
        {/* Footer */}
        <Card 
          variant="subtle" 
          className="border-t mt-auto"
          padding={spacing.md}
        >
          {footer || (
            <Stack direction="row" justify="between" align="center">
              <Text variant="caption" color="gray.500">
                {{#if useI18n}}
                {t('layout.footer.copyright', '© 2024 Your Company. All rights reserved.')}
                {{else}}
                © 2024 Your Company. All rights reserved.
                {{/if}}
              </Text>
            </Stack>
          )}
        </Card>
        {{/if}}
      </Stack>

      {{else if (eq layoutType 'dashboard')}}
      {/* Dashboard Layout Structure */}
      <Stack direction="column" spacing="none" className="min-h-screen">
        {{#if hasHeader}}
        <Card variant="elevated" className="border-b" padding={spacing.md}>
          {header || (
            <Stack direction="row" justify="between" align="center">
              <Text variant="heading" size="2xl" weight="bold" color="gray.900">
                {{#if useI18n}}
                {t('layout.dashboard.title', 'Dashboard')}
                {{else}}
                Dashboard
                {{/if}}
              </Text>
            </Stack>
          )}
        </Card>
        {{/if}}

        <Container maxWidth="full" padding={spacing.xl} className="flex-1">
          <main role="main">
            {children}
          </main>
        </Container>

        {{#if hasFooter}}
        <Card variant="subtle" className="border-t" padding={spacing.sm}>
          {footer}
        </Card>
        {{/if}}
      </Stack>

      {{else if (eq layoutType 'auth')}}
      {/* Auth Layout Structure */}
      <Stack 
        direction="column" 
        justify="center" 
        align="center" 
        className="min-h-screen"
        spacing={spacing.xl}
      >
        <Container maxWidth="sm" className="w-full">
          <Card 
            variant="elevated" 
            padding={spacing.xl}
            className="shadow-2xl"
          >
            <main role="main">
              {children}
            </main>
          </Card>
        </Container>
        
        {{#if hasFooter}}
        {footer || (
          <Text variant="caption" color="gray.500" className="text-center">
            {{#if useI18n}}
            {t('layout.auth.footer', 'Secure authentication powered by Xala')}
            {{else}}
            Secure authentication powered by Xala
            {{/if}}
          </Text>
        )}
        {{/if}}
      </Stack>

      {{else}}
      {/* Default/Web Layout Structure */}
      <Stack direction="column" spacing="none" className="min-h-screen">
        {{#if hasHeader}}
        <Card variant="elevated" className="border-b sticky top-0 z-10" padding={spacing.md}>
          {header || (
            <Container maxWidth="7xl">
              <Stack direction="row" justify="between" align="center">
                <Text variant="heading" size="xl" weight="bold" color="gray.900">
                  {{#if useI18n}}
                  {t('layout.web.title', 'Your App')}
                  {{else}}
                  Your App
                  {{/if}}
                </Text>
                <Stack direction="row" spacing={spacing.md} align="center">
                  {/* Navigation items */}
                </Stack>
              </Stack>
            </Container>
          )}
        </Card>
        {{/if}}

        <Container maxWidth="7xl" className="flex-1" padding={spacing.lg}>
          <main role="main">
            {children}
          </main>
        </Container>

        {{#if hasFooter}}
        <Card variant="subtle" className="border-t mt-auto" padding={spacing.lg}>
          <Container maxWidth="7xl">
            {footer || (
              <Stack direction="row" justify="between" align="center">
                <Text variant="caption" color="gray.500">
                  {{#if useI18n}}
                  {t('layout.footer.copyright', '© 2024 Your Company')}
                  {{else}}
                  © 2024 Your Company
                  {{/if}}
                </Text>
              </Stack>
            )}
          </Container>
        </Card>
        {{/if}}
      </Stack>
      {{/if}}
    </Container>
  );
};

// Default export for convenience
export default {{className}}Layout;

// Type exports
export type { {{className}}LayoutProps };

// Display name for debugging
{{className}}Layout.displayName = '{{className}}Layout';